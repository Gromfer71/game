<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="BuildingsHandler.php" path="\Services">
    <totals>
      <lines total="65" comments="7" code="58" executable="21" executed="4" percent="19.05"/>
      <methods count="3" tested="1" percent="33.33"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Services\BuildingsHandler" start="18" executable="21" executed="4" crap="75.19">
      <namespace name="App\Services"/>
      <method name="__construct" signature="__construct(App\Repositories\Write\WriteBuildingRepository $writeBuildingRepository)" start="24" end="27" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="upgrade" signature="upgrade(int $id)" start="29" end="54" crap="56" executable="15" executed="0" coverage="0"/>
      <method name="checkBuildings" signature="checkBuildings()" start="56" end="64" crap="4.12" executable="4" executed="2" coverage="50"/>
    </class>
    <coverage>
      <line nr="26">
        <covered by="Tests\Feature\LogoutTest::test_example"/>
        <covered by="Tests\Feature\MessageTest::success_send"/>
        <covered by="Tests\Feature\MessageTest::existing_in_database"/>
        <covered by="Tests\Feature\MessageTest::not_existing_invalid_message"/>
        <covered by="Tests\Feature\MessageTest::null_user_send"/>
        <covered by="Tests\Feature\MessageTest::null_user_send2"/>
        <covered by="Tests\Feature\MessageTest::empty_message"/>
        <covered by="Tests\Feature\MessageTest::very_large_message"/>
        <covered by="Tests\Feature\MessageTest::send_message_to_self"/>
        <covered by="Tests\Feature\UITest::home_page"/>
        <covered by="Tests\Feature\UITest::show_online"/>
        <covered by="Tests\Feature\UITest::mail_main"/>
        <covered by="Tests\Feature\UITest::dialogs"/>
        <covered by="Tests\Feature\UITest::dialog"/>
        <covered by="Tests\Feature\UITest::systemMessages"/>
        <covered by="Tests\Feature\UITest::showSystemMessage"/>
      </line>
      <line nr="27">
        <covered by="Tests\Feature\LogoutTest::test_example"/>
        <covered by="Tests\Feature\MessageTest::success_send"/>
        <covered by="Tests\Feature\MessageTest::existing_in_database"/>
        <covered by="Tests\Feature\MessageTest::not_existing_invalid_message"/>
        <covered by="Tests\Feature\MessageTest::null_user_send"/>
        <covered by="Tests\Feature\MessageTest::null_user_send2"/>
        <covered by="Tests\Feature\MessageTest::empty_message"/>
        <covered by="Tests\Feature\MessageTest::very_large_message"/>
        <covered by="Tests\Feature\MessageTest::send_message_to_self"/>
        <covered by="Tests\Feature\UITest::home_page"/>
        <covered by="Tests\Feature\UITest::show_online"/>
        <covered by="Tests\Feature\UITest::mail_main"/>
        <covered by="Tests\Feature\UITest::dialogs"/>
        <covered by="Tests\Feature\UITest::dialog"/>
        <covered by="Tests\Feature\UITest::systemMessages"/>
        <covered by="Tests\Feature\UITest::showSystemMessage"/>
      </line>
      <line nr="59">
        <covered by="Tests\Feature\LogoutTest::test_example"/>
        <covered by="Tests\Feature\MessageTest::success_send"/>
        <covered by="Tests\Feature\MessageTest::existing_in_database"/>
        <covered by="Tests\Feature\MessageTest::not_existing_invalid_message"/>
        <covered by="Tests\Feature\MessageTest::null_user_send"/>
        <covered by="Tests\Feature\MessageTest::null_user_send2"/>
        <covered by="Tests\Feature\MessageTest::empty_message"/>
        <covered by="Tests\Feature\MessageTest::very_large_message"/>
        <covered by="Tests\Feature\MessageTest::send_message_to_self"/>
        <covered by="Tests\Feature\UITest::home_page"/>
        <covered by="Tests\Feature\UITest::show_online"/>
        <covered by="Tests\Feature\UITest::mail_main"/>
        <covered by="Tests\Feature\UITest::dialogs"/>
        <covered by="Tests\Feature\UITest::dialog"/>
        <covered by="Tests\Feature\UITest::systemMessages"/>
        <covered by="Tests\Feature\UITest::showSystemMessage"/>
      </line>
      <line nr="64">
        <covered by="Tests\Feature\LogoutTest::test_example"/>
        <covered by="Tests\Feature\MessageTest::success_send"/>
        <covered by="Tests\Feature\MessageTest::existing_in_database"/>
        <covered by="Tests\Feature\MessageTest::not_existing_invalid_message"/>
        <covered by="Tests\Feature\MessageTest::null_user_send"/>
        <covered by="Tests\Feature\MessageTest::null_user_send2"/>
        <covered by="Tests\Feature\MessageTest::empty_message"/>
        <covered by="Tests\Feature\MessageTest::very_large_message"/>
        <covered by="Tests\Feature\MessageTest::send_message_to_self"/>
        <covered by="Tests\Feature\UITest::home_page"/>
        <covered by="Tests\Feature\UITest::show_online"/>
        <covered by="Tests\Feature\UITest::mail_main"/>
        <covered by="Tests\Feature\UITest::dialogs"/>
        <covered by="Tests\Feature\UITest::dialog"/>
        <covered by="Tests\Feature\UITest::systemMessages"/>
        <covered by="Tests\Feature\UITest::showSystemMessage"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Services</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Repositories</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Read</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ReadBuildingRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Repositories</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Read</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ReadUserRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Repositories</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Write</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">WriteBuildingRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Support</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Facades</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Redirect</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * Contains the main methods to some or other work with user buildings.</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * Describes all buildings actions with validation data and DB updates.</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> * @package App\Services</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="18">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BuildingsHandler</token>
      </line>
      <line no="19">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MAX_LVL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">30</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$repository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23"/>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">WriteBuildingRepository</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$writeBuildingRepository</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">repository</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$writeBuildingRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">upgrade</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReadUserRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCurrentUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$building</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReadBuildingRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getBuildingById</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$baseBuilding</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReadBuildingRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getBaseBuilding</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$building</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">base_id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ReadBuildingRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getBuildingById</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lv</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MAX_LVL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Redirect</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">back</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">withErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'&#x414;&#x43E;&#x441;&#x442;&#x438;&#x433;&#x43D;&#x443;&#x442; &#x43C;&#x430;&#x43A;&#x441;&#x438;&#x43C;&#x430;&#x43B;&#x44C;&#x43D;&#x44B;&#x439; &#x443;&#x440;&#x43E;&#x432;&#x435;&#x43D;&#x44C;! '</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ReadBuildingRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getUpgradeableBuildings</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">max_building_upgrades</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Redirect</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">back</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">withErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">              </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'&#x41F;&#x440;&#x435;&#x432;&#x44B;&#x448;&#x435;&#x43D;&#x43E; &#x43E;&#x434;&#x43D;&#x43E;&#x432;&#x440;&#x435;&#x43C;&#x435;&#x43D;&#x43D;&#x43E;&#x435; &#x43A;&#x43E;&#x43B;&#x438;&#x447;&#x435;&#x441;&#x442;&#x432;&#x43E; &#x443;&#x43B;&#x443;&#x447;&#x448;&#x430;&#x435;&#x43C;&#x44B;&#x445; &#x43F;&#x43E;&#x441;&#x442;&#x440;&#x43E;&#x435;&#x43A;!'</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">food</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$baseBuilding</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">food_up</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wood</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$baseBuilding</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">wood_up</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">iron</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$baseBuilding</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">iron_up</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mithril</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$baseBuilding</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mithril_up</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">repository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">startUpgrade</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55"/>
      <line no="56">
        <token name="T_PUBLIC">public</token>
      </line>
      <line no="57">
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">checkBuildings</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="58">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ReadBuildingRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getUpgradeableBuildings</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$upgradeableBuilding</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ReadBuildingRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">checkFinishUpgrade</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$upgradeableBuilding</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">repository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">finishUpgrade</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$upgradeableBuilding</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="66"/>
    </source>
  </file>
</phpunit>
