<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ReadMessageRepository.php" path="\Repositories\Read">
    <totals>
      <lines total="131" comments="22" code="109" executable="37" executed="20" percent="54.05"/>
      <methods count="5" tested="4" percent="80.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Repositories\Read\ReadMessageRepository" start="15" executable="37" executed="20" crap="19.7">
      <namespace name="App\Repositories\Read"/>
      <method name="getAllMessagesWith" signature="getAllMessagesWith($id)" start="25" end="36" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="getLastMessages" signature="getLastMessages()" start="44" end="112" crap="14.99" executable="27" executed="10" coverage="37.037037037037"/>
      <method name="checkNewDay" signature="checkNewDay()" start="117" end="120" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getSystemMessages" signature="getSystemMessages()" start="122" end="125" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getSystemMessageById" signature="getSystemMessageById($id)" start="127" end="130" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="27">
        <covered by="Tests\Feature\UITest::dialog"/>
      </line>
      <line nr="28">
        <covered by="Tests\Feature\UITest::dialog"/>
      </line>
      <line nr="30">
        <covered by="Tests\Feature\UITest::dialog"/>
      </line>
      <line nr="31">
        <covered by="Tests\Feature\UITest::dialog"/>
      </line>
      <line nr="32">
        <covered by="Tests\Feature\UITest::dialog"/>
      </line>
      <line nr="33">
        <covered by="Tests\Feature\UITest::dialog"/>
      </line>
      <line nr="35">
        <covered by="Tests\Feature\UITest::dialog"/>
      </line>
      <line nr="47">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="53">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="54">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="55">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="59">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="60">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="61">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="65">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="67">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="111">
        <covered by="Tests\Feature\UITest::dialogs"/>
      </line>
      <line nr="119">
        <covered by="Tests\Feature\LogoutTest::test_example"/>
        <covered by="Tests\Feature\MessageTest::success_send"/>
        <covered by="Tests\Feature\MessageTest::existing_in_database"/>
        <covered by="Tests\Feature\MessageTest::not_existing_invalid_message"/>
        <covered by="Tests\Feature\MessageTest::null_user_send"/>
        <covered by="Tests\Feature\MessageTest::null_user_send2"/>
        <covered by="Tests\Feature\MessageTest::empty_message"/>
        <covered by="Tests\Feature\MessageTest::very_large_message"/>
        <covered by="Tests\Feature\MessageTest::send_message_to_self"/>
        <covered by="Tests\Feature\UITest::home_page"/>
        <covered by="Tests\Feature\UITest::show_online"/>
        <covered by="Tests\Feature\UITest::mail_main"/>
        <covered by="Tests\Feature\UITest::dialogs"/>
        <covered by="Tests\Feature\UITest::dialog"/>
        <covered by="Tests\Feature\UITest::systemMessages"/>
        <covered by="Tests\Feature\UITest::showSystemMessage"/>
      </line>
      <line nr="124">
        <covered by="Tests\Feature\UITest::systemMessages"/>
      </line>
      <line nr="129">
        <covered by="Tests\Feature\UITest::showSystemMessage"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Repositories</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Read</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Models</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Message</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Carbon</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Carbon</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Support</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Facades</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">DB</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * Messages repository only for reading messages.</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * @package App\Repositories\Read</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="15">
        <token name="T_ABSTRACT">abstract</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReadMessageRepository</token>
      </line>
      <line no="16">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     * Return collection of all messages with user (id) with order by desc of created_at.</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     * The first messages will given the latest.</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     * @param    $id</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * @return \Illuminate\Support\Collection</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getAllMessagesWith</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Message</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">whereRaw</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'(`from` = ? and `to` = ?) OR (`from` = ? and `to` = ?)'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">ReadUserRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCurrentUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">ReadUserRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCurrentUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderBy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created_at'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * Returns collection with one message with each interlocutor</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     * No matter who sender or who receiver.</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * @return \Illuminate\Support\Collection</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getLastMessages</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** For shorter write */</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$myId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReadUserRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCurrentUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** This variable contains all messages where the current authorized user is sender or receiver.</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">         *</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">         * @var \Illuminate\Support\Collection $allMessages</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$allMessages</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Message</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'from'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$myId</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orWhere</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'to'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$myId</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** Then we will get out ids of all interlocutor (senders and receivers)</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">         *  and put they in collection. */</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$allId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$allMessages</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">pluck</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'from'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">concat</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$allMessages</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">pluck</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'to'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">unique</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** There we will contain only one message from each interlocutor</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">         *  no matter who sender or who receiver (like VK dialogs). */</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lastMessages</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">collect</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$allId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/** skip messages where sender and receiver are identical</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">             *  (should to exclude this possibility in program) */</token>
      </line>
      <line no="70"/>
      <line no="71">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$myId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/** Take out the first message where the current user is sender and</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">             *  user with $id is receiver.</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">             *</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">             * @var \Illuminate\Database\Eloquent\Model $outgoingMessage</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">             */</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$outgoingMessage</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Message</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'from'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$myId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'to'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">latest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">first</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83"/>
      <line no="84">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/** Exactly the same here but vice versa.</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">             *</token>
      </line>
      <line no="86">
        <token name="T_DOC_COMMENT">             * @var \Illuminate\Database\Eloquent\Model $incomeMessage</token>
      </line>
      <line no="87">
        <token name="T_DOC_COMMENT">             */</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$incomeMessage</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Message</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'from'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'to'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$myId</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">latest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">first</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/** Search the latest message and push it to collection.</token>
      </line>
      <line no="93">
        <token name="T_DOC_COMMENT">             *  If something will null, automatically push another message. */</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$outgoingMessage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$lastMessages</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">push</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$incomeMessage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="98"/>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$incomeMessage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$lastMessages</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">push</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$outgoingMessage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="103"/>
      <line no="104">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$outgoingMessage</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">created_at</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$incomeMessage</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">created_at</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$lastMessages</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">push</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$outgoingMessage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$lastMessages</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">push</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$incomeMessage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="110"/>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lastMessages</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">sortByDesc</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created_at'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="113"/>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="115">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="116">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">checkNewDay</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">now</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">day</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Carbon</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ReadUserRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCurrentUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">last_active</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">day</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="121"/>
      <line no="122">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSystemMessages</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DB</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">table</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'system_messages'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'to'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReadUserRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCurrentUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSystemMessageById</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DB</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">table</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'system_messages'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">find</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="131">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="132"/>
    </source>
  </file>
</phpunit>
